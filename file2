

zhangyajun-----------------

3.4.1 长期分支
由于 Git 使用简单的三方合并，所以就算在较长一段时间内，反复多次把某个分支合并
到另一分支，也不是什么难事。也就是说，你可以同时拥有多个开放的分支，每个分支用于
完成特定的任务，随着开发的推进，你可以随时把某个特性分支的成果并到其他分支中。
许多使用 Git 的开发者都喜欢以这种方式来开展工作，比如仅在 master 分支中保留完
全稳定的代码，即已经发布或即将发布的代码。与此同时，他们还有一个名为 develop 或
next 的平行分支，专门用于后续的开发，或仅用于稳定性测试 —— 当然并不是说一定要
绝对稳定，不过一旦进入某种稳定状态，便可以把它合并到 master 里。这样，在确保这些
已完成的特性分支（短期分支，如前例的 iss53）能够通过所有测试，并且不会引入更多错
误之后，就可以并到主干分支中，等待下一次的发布。
本质上我们刚才谈论的，是随着 commit 不停前移的指针。稳定分支的指针总是在提交历
史中落后一大截，而前沿分支总是比较靠前（见图 3.18）

===================================================



务，随着开发的推进，你可以随时把某个特性分支的成果并到其他分支中。
许多使用 Git 的开发者都喜欢以这种方式来开展工作，比如仅在 master 分支中保留完
全稳定的代码，即已经发布或即将发布的代码。与此同时，他们还有一个名为 develop 或
next 的平行分支，专门用于后续的开发，或仅用于稳定性测试 —— 当然并不是说一定要
绝对稳定，不过一旦进入某

===================================================

















